
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.test-vm.data.yandex_compute_image.my_image[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "yandex_compute_image" "my_image" {
      [32m+[0m[0m created_at          = (known after apply)
      [32m+[0m[0m description         = (known after apply)
      [32m+[0m[0m family              = "ubuntu-2004-lts"
      [32m+[0m[0m folder_id           = (known after apply)
      [32m+[0m[0m hardware_generation = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m image_id            = (known after apply)
      [32m+[0m[0m kms_key_id          = (known after apply)
      [32m+[0m[0m labels              = (known after apply)
      [32m+[0m[0m min_disk_size       = (known after apply)
      [32m+[0m[0m name                = (known after apply)
      [32m+[0m[0m os_type             = (known after apply)
      [32m+[0m[0m pooled              = (known after apply)
      [32m+[0m[0m product_ids         = (known after apply)
      [32m+[0m[0m size                = (known after apply)
      [32m+[0m[0m status              = (known after apply)
    }

[1m  # module.test-vm.yandex_compute_instance.vm[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "vm" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m description               = "TODO: description; {{terraform yyy managed}}"
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hardware_generation       = (known after apply)
      [32m+[0m[0m hostname                  = "develop-webs-0"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = {
          [32m+[0m[0m "owner"   = "a.politiko"
          [32m+[0m[0m "project" = "my-best-terraform-project"
        }
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "serial-port-enable" = "1"
        }
      [32m+[0m[0m name                      = "develop-webs-0"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = (known after apply)
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index          = (known after apply)
          [32m+[0m[0m ip_address     = (known after apply)
          [32m+[0m[0m ipv4           = true
          [32m+[0m[0m ipv6           = (known after apply)
          [32m+[0m[0m ipv6_address   = (known after apply)
          [32m+[0m[0m mac_address    = (known after apply)
          [32m+[0m[0m nat            = true
          [32m+[0m[0m nat_ip_address = (known after apply)
          [32m+[0m[0m nat_ip_version = (known after apply)
          [32m+[0m[0m subnet_id      = (known after apply)
        }

      [32m+[0m[0m placement_policy (known after apply)

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 1
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # module.test-vm.yandex_compute_instance.vm[1][0m will be created
[0m  [32m+[0m[0m resource "yandex_compute_instance" "vm" {
      [32m+[0m[0m allow_stopping_for_update = true
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m description               = "TODO: description; {{terraform yyy managed}}"
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m fqdn                      = (known after apply)
      [32m+[0m[0m gpu_cluster_id            = (known after apply)
      [32m+[0m[0m hardware_generation       = (known after apply)
      [32m+[0m[0m hostname                  = "develop-webs-1"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = {
          [32m+[0m[0m "owner"   = "a.politiko"
          [32m+[0m[0m "project" = "my-best-terraform-project"
        }
      [32m+[0m[0m maintenance_grace_period  = (known after apply)
      [32m+[0m[0m maintenance_policy        = (known after apply)
      [32m+[0m[0m metadata                  = {
          [32m+[0m[0m "serial-port-enable" = "1"
        }
      [32m+[0m[0m name                      = "develop-webs-1"
      [32m+[0m[0m network_acceleration_type = "standard"
      [32m+[0m[0m platform_id               = "standard-v1"
      [32m+[0m[0m service_account_id        = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m zone                      = "ru-central1-a"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete = true
          [32m+[0m[0m device_name = (known after apply)
          [32m+[0m[0m disk_id     = (known after apply)
          [32m+[0m[0m mode        = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m block_size  = (known after apply)
              [32m+[0m[0m description = (known after apply)
              [32m+[0m[0m image_id    = (known after apply)
              [32m+[0m[0m name        = (known after apply)
              [32m+[0m[0m size        = 10
              [32m+[0m[0m snapshot_id = (known after apply)
              [32m+[0m[0m type        = "network-hdd"
            }
        }

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface {
          [32m+[0m[0m index          = (known after apply)
          [32m+[0m[0m ip_address     = (known after apply)
          [32m+[0m[0m ipv4           = true
          [32m+[0m[0m ipv6           = (known after apply)
          [32m+[0m[0m ipv6_address   = (known after apply)
          [32m+[0m[0m mac_address    = (known after apply)
          [32m+[0m[0m nat            = true
          [32m+[0m[0m nat_ip_address = (known after apply)
          [32m+[0m[0m nat_ip_version = (known after apply)
          [32m+[0m[0m subnet_id      = (known after apply)
        }

      [32m+[0m[0m placement_policy (known after apply)

      [32m+[0m[0m resources {
          [32m+[0m[0m core_fraction = 5
          [32m+[0m[0m cores         = 2
          [32m+[0m[0m memory        = 1
        }

      [32m+[0m[0m scheduling_policy {
          [32m+[0m[0m preemptible = true
        }
    }

[1m  # module.vpc_dev.yandex_vpc_network.network[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_network" "network" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m default_security_group_id = (known after apply)
      [32m+[0m[0m description               = "Generated by Dummy VPC module"
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = (known after apply)
      [32m+[0m[0m name                      = "develop-vpc-network"
      [32m+[0m[0m subnet_ids                = (known after apply)
    }

[1m  # module.vpc_dev.yandex_vpc_subnet.subnet[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "develop-vpc-network-ru-central1-a-01"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-a"
    }

[1m  # module.vpc_dev.yandex_vpc_subnet.subnet[1][0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "develop-vpc-network-ru-central1-a-02"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.2.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-a"
    }

[1m  # module.vpc_pro.yandex_vpc_network.network[0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_network" "network" {
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m default_security_group_id = (known after apply)
      [32m+[0m[0m description               = "Generated by Dummy VPC module"
      [32m+[0m[0m folder_id                 = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m labels                    = (known after apply)
      [32m+[0m[0m name                      = "prod-vpc-network"
      [32m+[0m[0m subnet_ids                = (known after apply)
    }

[1m  # module.vpc_pro.yandex_vpc_subnet.subnet[0][0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "prod-vpc-network-ru-central1-a-01"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.11.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-a"
    }

[1m  # module.vpc_pro.yandex_vpc_subnet.subnet[1][0m will be created
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "subnet" {
      [32m+[0m[0m created_at     = (known after apply)
      [32m+[0m[0m folder_id      = (known after apply)
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m labels         = (known after apply)
      [32m+[0m[0m name           = "prod-vpc-network-ru-central1-a-02"
      [32m+[0m[0m network_id     = (known after apply)
      [32m+[0m[0m v4_cidr_blocks = [
          [32m+[0m[0m "10.0.22.0/24",
        ]
      [32m+[0m[0m v6_cidr_blocks = (known after apply)
      [32m+[0m[0m zone           = "ru-central1-a"
    }

[1mPlan:[0m 8 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
